require 'docker'
require 'json'
require 'rake'
require 'rspec/core/rake_task'
require 'yajl'

@group = 'rucker'
@name = nil

task :default => 'docker:test'

namespace :docker do

  task :test => [ :spec, :cleanup ]
  
  desc 'Run specs'
  RSpec::Core::RakeTask.new(:spec) do |t|
    t.pattern = Dir.glob('spec/*_spec.rb')
    t.rspec_opts = '--format documentation'
    t.rspec_opts << ' --color'
  end
  
  desc 'Remove dangling docker images'
  task :cleanup do
    images = `docker images -q -f dangling=true`
    #FIXME don't output images when capturing them
    system "docker rmi #{images}" unless images.empty?
  end
  
  desc 'Build docker image'
  task :build, [:args] do |t, args|
    unless @name.nil?
      opts = { 't' => "#{@group}/#{@name}:latest" }
      #TODO Handle arbitrary args
      unless args.to_a.empty? or args['args'][:buildargs].empty?
        opts = opts.merge({ 'buildargs' => JSON.generate(args['args'][:buildargs]) })
      end
      parser = Yajl::Parser.new
      parser.on_parse_complete = ->(obj) { print obj['stream'] }
      Docker::Image.build_from_dir('.', opts)	do |line|
        parser.parse(line)
			end
    end
  end
end
